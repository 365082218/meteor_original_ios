#if RAVEN_COMPILED
using System;
using System.Collections.Generic;


// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Starlite.Raven.Compiler {
    
    
    public abstract partial class RavenTriggerPropertyBase0 : Starlite.Raven.RavenTriggerPropertyComponentBase {
        
        private RavenFunctionCall e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i]);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent);
            }
        }
        
        public virtual void ManualExecute() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i]);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall(UnityEngine.Object component);
    
    public abstract partial class RavenTriggerPropertyBase1<T0> : Starlite.Raven.RavenTriggerPropertyComponentBase
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        private RavenFunctionCall<T0> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0);
            }
        }
        
        public virtual void ManualExecute(T0 value0) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0>(UnityEngine.Object component, T0 value0);
    
    public abstract partial class RavenTriggerPropertyBase2<T0, T1> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        private RavenFunctionCall<T0, T1> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1>(UnityEngine.Object component, T0 value0, T1 value1);
    
    public abstract partial class RavenTriggerPropertyBase3<T0, T1, T2> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        private RavenFunctionCall<T0, T1, T2> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2);
    
    public abstract partial class RavenTriggerPropertyBase4<T0, T1, T2, T3> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        private RavenFunctionCall<T0, T1, T2, T3> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3);
    
    public abstract partial class RavenTriggerPropertyBase5<T0, T1, T2, T3, T4> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        [UnityEngine.SerializeField()]
        protected T4 m_Value4;
        
        private RavenFunctionCall<T0, T1, T2, T3, T4> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3, T4>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3, m_Value4);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3, m_Value4);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3, value4);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3, value4);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3, T4> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3, T4>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3, T4 value4);
    
    public abstract partial class RavenTriggerPropertyBase6<T0, T1, T2, T3, T4, T5> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        [UnityEngine.SerializeField()]
        protected T4 m_Value4;
        
        [UnityEngine.SerializeField()]
        protected T5 m_Value5;
        
        private RavenFunctionCall<T0, T1, T2, T3, T4, T5> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3, T4, T5>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3, value4, value5);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3, value4, value5);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3, T4, T5> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3, T4, T5>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);
    
    public abstract partial class RavenTriggerPropertyBase7<T0, T1, T2, T3, T4, T5, T6> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        [UnityEngine.SerializeField()]
        protected T4 m_Value4;
        
        [UnityEngine.SerializeField()]
        protected T5 m_Value5;
        
        [UnityEngine.SerializeField()]
        protected T6 m_Value6;
        
        private RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3, T4, T5, T6>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3, value4, value5, value6);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3, value4, value5, value6);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);
    
    public abstract partial class RavenTriggerPropertyBase8<T0, T1, T2, T3, T4, T5, T6, T7> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
    
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        [UnityEngine.SerializeField()]
        protected T4 m_Value4;
        
        [UnityEngine.SerializeField()]
        protected T5 m_Value5;
        
        [UnityEngine.SerializeField()]
        protected T6 m_Value6;
        
        [UnityEngine.SerializeField()]
        protected T7 m_Value7;
        
        private RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3, T4, T5, T6, T7>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6, m_Value7);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6, m_Value7);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3, value4, value5, value6, value7);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3, value4, value5, value6, value7);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);
    
    public abstract partial class RavenTriggerPropertyBase9<T0, T1, T2, T3, T4, T5, T6, T7, T8> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
    
    
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        [UnityEngine.SerializeField()]
        protected T4 m_Value4;
        
        [UnityEngine.SerializeField()]
        protected T5 m_Value5;
        
        [UnityEngine.SerializeField()]
        protected T6 m_Value6;
        
        [UnityEngine.SerializeField()]
        protected T7 m_Value7;
        
        [UnityEngine.SerializeField()]
        protected T8 m_Value8;
        
        private RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7, T8> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3, T4, T5, T6, T7, T8>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6, m_Value7, m_Value8);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6, m_Value7, m_Value8);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3, value4, value5, value6, value7, value8);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3, value4, value5, value6, value7, value8);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7, T8> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7, T8>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);
    
    public abstract partial class RavenTriggerPropertyBase10<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> : Starlite.Raven.RavenTriggerPropertyComponentBase
    
    
    
    
    
    
    
    
    
     {
        
        [UnityEngine.SerializeField()]
        [UnityEngine.HeaderAttribute("Values")]
        protected T0 m_Value0;
        
        [UnityEngine.SerializeField()]
        protected T1 m_Value1;
        
        [UnityEngine.SerializeField()]
        protected T2 m_Value2;
        
        [UnityEngine.SerializeField()]
        protected T3 m_Value3;
        
        [UnityEngine.SerializeField()]
        protected T4 m_Value4;
        
        [UnityEngine.SerializeField()]
        protected T5 m_Value5;
        
        [UnityEngine.SerializeField()]
        protected T6 m_Value6;
        
        [UnityEngine.SerializeField()]
        protected T7 m_Value7;
        
        [UnityEngine.SerializeField()]
        protected T8 m_Value8;
        
        [UnityEngine.SerializeField()]
        protected T9 m_Value9;
        
        private RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> e_ExecuteCallback;
        
        public override void Initialize(Starlite.Raven.RavenSequence sequence) {
            base.Initialize(sequence);
            PropertyReflectionCompiledOutput.ConfigureRavenTriggerProperty<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this);
        }
        
        public override void OnEnter() {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6, m_Value7, m_Value8, m_Value9);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, m_Value0, m_Value1, m_Value2, m_Value3, m_Value4, m_Value5, m_Value6, m_Value7, m_Value8, m_Value9);
            }
        }
        
        public virtual void ManualExecute(T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8, T9 value9) {
            if (HasOverridenTargetComponents()) {
                for (int i = 0
                ; i < m_OverridenTargetComponents.Count; ++i
                ) {
                    e_ExecuteCallback(m_OverridenTargetComponents[i], value0, value1, value2, value3, value4, value5, value6, value7, value8, value9);
                }
            }
            else {
                e_ExecuteCallback(m_TargetComponent, value0, value1, value2, value3, value4, value5, value6, value7, value8, value9);
            }
        }
        
        public void SetOnExecuteCallback(RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> callback) {
            e_ExecuteCallback = callback;
        }
    }
    
    public delegate void RavenFunctionCall<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(UnityEngine.Object component, T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8, T9 value9);
}
#endif	 // RAVEN_COMPILED
